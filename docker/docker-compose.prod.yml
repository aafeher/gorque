
x-env-influx: &env-influx
  INFLUX_URL: ${INFLUX_URL}
  INFLUX_TOKEN: ${INFLUX_TOKEN}
  INFLUX_ORG: ${INFLUX_ORG}
  INFLUX_BUCKET: ${INFLUX_BUCKET}

networks:
  gorque:
    name: gorque
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-gorque

services:
  backend:
    image: gorque-backend:master-arm64
    depends_on:
      - influxdb
    environment:
      <<:
        - *env-influx
      ENV: ${ENV}
      FRONTEND_URL: ${FRONTEND_URL}
      LOG_LEVEL: ${LOG_LEVEL}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      DATABASE_SQLITE_URL: ${DATABASE_SQLITE_URL}
      CORS_ORIGINS: ${CORS_ORIGINS}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - gorque
    ports:
      - "8080:8080"
    restart: unless-stopped
    user: "1001:1001"
    volumes:
      - gorque-sqlite:/gorque/sqlite:Z

  frontend:
    image: gorque-frontend:master-arm64
    depends_on:
      - backend
    environment:
      - VITE_API_URL=${VITE_API_URL}
      - VITE_APP_TITLE=${VITE_APP_TITLE}
      - VITE_DEBUG=${VITE_DEBUG}
    networks:
      - gorque
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./volumes/log/nginx:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - gorque
    restart: unless-stopped

  influxdb:
    image: influxdb:2.7
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=gorque
      - DOCKER_INFLUXDB_INIT_PASSWORD=gorquepass
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUX_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUX_BUCKET}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUX_TOKEN}
    networks:
      - gorque
    restart: unless-stopped
    volumes:
      - gorque-influxdb:/var/lib/influxdb2:Z

volumes:
  gorque-sqlite:
  gorque-influxdb:
